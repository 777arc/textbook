.. _intro-chapter:

#############
Вступ
#############

***************************
Мета та цільова аудиторія
***************************

Перш за все, кілька важливих термінів:

**Програмно-визначене радіо (SDR):**.
    Радіо, яке використовує програмне забезпечення для виконання завдань обробки сигналів, які традиційно виконувалися апаратним забезпеченням
  
**Цифрова обробка сигналів (DSP):**.
    Цифрова обробка сигналів, у нашому випадку радіосигналів

Цей підручник є практичним вступом до DSP, SDR та бездротового зв'язку.  Він призначений для тих, хто:

#. Зацікавлений у *використанні* SDR для створення крутих речей
#. Добре знається на Python
#. Відносно новачок в DSP, бездротовому зв'язку та SDR
#. Візуальний учень, що віддає перевагу анімації, а не рівнянням
#. Краще розуміє рівняння *після* вивчення концепцій
#. Шукає стислі пояснення, а не 1000-сторінковий підручник

Прикладом може бути студент факультету комп'ютерних наук, зацікавлений у роботі, пов'язаній з бездротовим зв'язком, після закінчення навчання, хоча цей посібник може бути використаний будь-ким, хто хоче дізнатися про SDR і має досвід програмування.  Таким чином, він охоплює необхідну теорію для розуміння методів ЦОС без інтенсивної математики, яка зазвичай включається в курси з ЦОС.  Замість того, щоб занурюватися в рівняння, використовується велика кількість зображень та анімацій, які допомагають передати концепції, як, наприклад, складна плоска анімація ряду Фур'є, наведена нижче.  Я вважаю, що рівняння найкраще розуміються *після* вивчення концепцій за допомогою візуальних образів і практичних вправ.  Інтенсивне використання анімації є причиною того, що PySDR ніколи не буде продаватися в друкованому вигляді на Amazon.  

.. image:: ../_images/fft_logo_wide.gif
   :scale: 70 %   
   :align: center
   :alt: Логотип PySDR, створений за допомогою перетворення Фур'є
   
Цей підручник призначений для швидкого і плавного введення понять, що дозволить читачеві виконувати DSP і розумно використовувати SDR.  Він не є довідником з усіх тем DSP/SDR; вже існує безліч чудових підручників, таких як `Analog Device's SDR textbook
<https://www.analog.com/en/education/education-library/software-defined-radio-for-engineers.html>`_ та `dspguide.com <http://www.dspguide.com/>`_.  Ви завжди можете скористатися Google, щоб згадати тригонометричні тотожності або межу Шеннона.  Подумайте про цей підручник як про ворота у світ DSP і SDR: він легший і вимагає менше часу і грошей, якщо порівнювати з більш традиційними курсами і підручниками.

Щоб охопити фундаментальну теорію ЦОС, цілий семестр "Сигналів і систем", типового курсу в електротехніці, стиснуто до кількох розділів.  Після вивчення основ ЦОС ми переходимо до SDR, хоча концепції ЦОС і бездротового зв'язку продовжують з'являтися протягом усього підручника.

Приклади коду подано мовою Python.  Вони використовують NumPy, яка є стандартною бібліотекою Python для масивів і високорівневої математики.  Приклади також спираються на Matplotlib - бібліотеку побудови графіків Python, яка забезпечує простий спосіб візуалізації сигналів, масивів і комплексних чисел.  Зауважте, що хоча Python загалом "повільніша" за C++, більшість математичних функцій у Python/NumPy реалізовано на C/C++ і добре оптимізовано.  Аналогічно, SDR API, який ми використовуємо, є просто набором прив'язок Python до функцій/класів C/C++.  Ті, хто має невеликий досвід роботи з Python, але міцну основу в MATLAB, Ruby або Perl, швидше за все, будуть в порядку після ознайомлення з синтаксисом Python.


***************
Долучитися
***************

Якщо ви прочитаєте будь-яку частину цього підручника і напишете мені на pysdr@vt.edu з питаннями/коментарями/пропозиціями, то вітаємо, ви зробили свій внесок у створення цього підручника!  Ви також можете редагувати вихідний матеріал безпосередньо на сторінці `підручника на GitHub <https://github.com/777arc/textbook/tree/master/content>`_ (ваша зміна покладе початок новому запиту на витягування).  Не соромтеся надсилати проблему або навіть запит на вилучення (PR) з виправленнями або покращеннями.  Ті, хто надсилає цінні відгуки/виправлення, будуть постійно додаватися до розділу подяк нижче.  Не дуже добре володієте Git'ом, але хочете запропонувати зміни?  Не соромтеся писати мені на pysdr@vt.edu.

Якщо ви отримали користь від PySDR, будь ласка, поділіться нею з колегами, студентами та іншими людьми, які навчаються впродовж життя і можуть бути зацікавлені в цьому матеріалі.  Також зліва є кнопка "Пожертвувати", яку можна використати як спосіб подякувати.

*****************
Подяки
*****************

Дякуємо всім, хто прочитав будь-яку частину цього підручника і залишив відгук, і особливо

- Баррі Даґґану (Barry Duggan <http://github.com/duggabe>)
- Метью Хеннону
- Джеймсу Хайєку
- Дейдрі Стаффер
- Таріку Бенадді за переклад PySDR французькою мовою <https://pysdr.org/fr/index-fr.html>`_.
- Даніелю Верслуїсу <https://versd.bitbucket.io/content/about.html>`_ за переклад PySDR голландською мовою <https://pysdr.org/nl/index-nl.html>`_.